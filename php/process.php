<?php//Add the main class including the logic to record and organize entitiesrequire 'classes/class.main.php';//Data coming from the frontend with all the informations to process and save$stringJSON = get_magic_quotes_gpc() ? stripslashes($_POST['data']) : $_POST['data'];$data = json_decode($stringJSON);//Set up the main object responsible for coordinating the action$m = new serviceAreaMapping();//$keyID is the numeric key between the record in the mySQL table and its items in the cartoDB table$keyID = $m->setNewProvider($data->providerDetails);//Things and categories to recordif($data->zipCodeDetailsSet){	$zipcodes = new stdClass();	$zipcodes->type = "zip";	$zipcodes->rank = $data->rank;	$zipcodes->provider_id = $keyID;	$zipcodes->provider_name = $data->providerDetails->name;	$zipcodes->area_type = "zip";	$zipcodes->zipcodes = $data->zipCodeDetails->zipcodes;	$m->setServiceAreas($zipcodes);}if($data->countyDetailsSet){	$counties = new stdClass();	$counties->type = "county";	$counties->rank = $data->rank;	$counties->provider_id = $keyID;	$counties->provider_name = $data->providerDetails->name;	$counties->area_type = "county";	$counties->counties = $data->countyDetails->counties;	$m->setServiceAreas($counties);	}if($data->radiiDetailsSet){	$radius = new stdClass();	$radius->type = "radius";	$radius->rank = $data->rank;	$radius->provider_id = $keyID;	$radius->provider_name = $data->providerDetails->name;	$radius->area_type = "radius";	$radius->centerLat = $data->providerDetails->addressLocation->jb;	$radius->centerLng = $data->providerDetails->addressLocation->kb;	$radius->radii = $data->radiiDetails->radii;	$m->setServiceAreas($radius);}if($data->customAreaDetailsSet){	$custom = new stdClass();	$custom->type = "custom";	$custom->rank = $data->rank;	$custom->provider_id = $keyID;	$custom->provider_name = $data->providerDetails->name;	$custom->area_type = "custom";	$custom->wkt = $data->customAreaDetails->geometry;	$m->setServiceAreas($custom);	}?>